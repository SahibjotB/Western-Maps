//2.0
package map2;
import java.net.*;
import java.util.*;
import javax.swing.ImageIcon;
import java.awt.image.*;
import java.io.*;
import javax.imageio.ImageIO;
import java.awt.*;
import java.sql.*;
import javax.swing.JLabel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author syjt1
 */
public class Buildings extends javax.swing.JFrame {
    private Connection con = null; 
    private PreparedStatement poi = null; 
    private PreparedStatement floor = null; 
    private PreparedStatement room = null;
    private PreparedStatement type = null;
    private PreparedStatement value = null;
    private PreparedStatement prpsearch = null;
    private PreparedStatement build = null;
    

    private ResultSet rsroom = null;
    private ResultSet rstype = null;
    private ResultSet rspoi = null;
    private ResultSet rsvalue = null;
    private ResultSet rssearch = null;
    private ResultSet rsbuild = null;
    private ResultSet rsfloor = null; 


    private ImageIcon img;
    private String[] poi_room = new String[20];
    private String[] poi_type = new String[20];
    private String[] poi_build = new String[20];
    private String[] poi_floor = new String[20];

    private JLabel filter = new javax.swing.JLabel();
    

    public Buildings(String buildingSelection) {
        initComponents();
        con = Map_connect.Map_Con();

        String Level = "Level 1";
        int index = 0;
        if("Natural Science Center".equals(buildingSelection)){
            Level = "Level 1";
            index = 0;    
        }
        else if("Western Science Center".equals(buildingSelection)){
                Level = "Level 2";
                index = 1;
        }
        else if("Middlesex College".equals(buildingSelection)){
                Level = "Level 2";
                index = 2;   
        }
        //BuildingName.setText(buildingSelection);
        String selection = "/map2/"+ buildingSelection + "/"+Level+".jpg";
        img = new javax.swing.ImageIcon(getClass().getResource(selection));
        picture.setIcon(img); // NOI18N
        picture.setSize(500,500);
        picture.setVisible(true);
        Mapscrollpanel.setViewportView(picture);
        Mapscrollpanel.setBounds(-30000, -30000, 10, 10);
        Mapscrollpanel.repaint();
        BuildingSelector.setSelectedIndex(index);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Search = new javax.swing.JButton();
        SearchBar = new javax.swing.JTextField();
        SavedPOI = new javax.swing.JButton();
        NewPOI = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        POIselector = new javax.swing.JComboBox<>();
        FloorSelector = new javax.swing.JComboBox<>();
        RoomSelector = new javax.swing.JComboBox<>();
        BuildingSelector = new javax.swing.JComboBox<>();
        BuildingName = new javax.swing.JLabel();
        Mapscrollpanel = new javax.swing.JScrollPane();
        picture = new javax.swing.JLabel();
        Legend = new javax.swing.JToggleButton();
        FilterPanel = new javax.swing.JPanel();
        ZoomIn = new javax.swing.JButton();
        ZoomOut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(2000, 2000));

        jPanel1.setPreferredSize(new java.awt.Dimension(3000, 3000));

        Search.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        SavedPOI.setText("View Saved POI");
        SavedPOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavedPOIActionPerformed(evt);
            }
        });

        NewPOI.setText("New POI");
        NewPOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPOIActionPerformed(evt);
            }
        });

        Clear.setText("Clear Filter");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        POIselector.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        POIselector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Accessibility", "Washroom", "Classroom", "<POI TYPE>", "Favourites", "Custom POIs" }));
        POIselector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                POIselectorActionPerformed(evt);
            }
        });

        FloorSelector.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        FloorSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Level 1", "Level 2", "Level 3" }));
        FloorSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FloorSelectorActionPerformed(evt);
            }
        });

        RoomSelector.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        RoomSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NSC ##" }));
        RoomSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoomSelectorActionPerformed(evt);
            }
        });

        BuildingSelector.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        BuildingSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Natural Science Center", "Western Science Center", "Middlesex College" }));
        BuildingSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuildingSelectorActionPerformed(evt);
            }
        });

        BuildingName.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        BuildingName.setText("Natural Science Center");

        Mapscrollpanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        Mapscrollpanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        Mapscrollpanel.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                MapscrollpanelAncestorResized(evt);
            }
        });

        picture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/map2/Natural Science Center/Level 1.jpg"))); // NOI18N
        Mapscrollpanel.setViewportView(picture);

        Legend.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        Legend.setText("Legend");
        Legend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LegendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FilterPanelLayout = new javax.swing.GroupLayout(FilterPanel);
        FilterPanel.setLayout(FilterPanelLayout);
        FilterPanelLayout.setHorizontalGroup(
            FilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        FilterPanelLayout.setVerticalGroup(
            FilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        ZoomIn.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        ZoomIn.setText("ZoomIn");
        ZoomIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoomInActionPerformed(evt);
            }
        });

        ZoomOut.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        ZoomOut.setText("ZoomOut");
        ZoomOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoomOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(BuildingName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Search)
                                .addGap(28, 28, 28)
                                .addComponent(POIselector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(FloorSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(RoomSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(BuildingSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Legend))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(SavedPOI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(NewPOI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(FilterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Mapscrollpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ZoomIn)
                                    .addComponent(ZoomOut))))))
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(BuildingName)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Legend)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(POIselector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FloorSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(RoomSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BuildingSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Search)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SavedPOI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NewPOI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Clear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FilterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(ZoomIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ZoomOut))
                    .addComponent(Mapscrollpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(2225, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, 1804, 1804, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BuildingSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuildingSelectorActionPerformed
        
        Object building_selection = BuildingSelector.getSelectedItem();
        ArrayList<String> listroom = new ArrayList<String>();
        String b_code = null;
        
        if(building_selection == "Western Science Center"){
            BuildingName.setText((String) building_selection);
            FloorSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Level 2", "Level 3", "Level 4","Level 5"}));
            if(Legend.isSelected()){
                img = new javax.swing.ImageIcon(getClass().getResource("Western Science Center/Level 2 A.jpg"));   
                
            }
            else{
                img = new javax.swing.ImageIcon(getClass().getResource("Western Science Center/Level 2.jpg"));   
            
            }              
            b_code = "WSC";
       
        }
        if(building_selection == "Middlesex College"){
            BuildingName.setText((String) building_selection);
            FloorSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Level 2", "Level 3", "Level 4","Level 5","Level 6"}));
            if(Legend.isSelected()){
            img = new javax.swing.ImageIcon(getClass().getResource("Middlesex College/Level 2 A.jpg"));  
                
            }
            else{
            img = new javax.swing.ImageIcon(getClass().getResource("Middlesex College/Level 2.jpg"));   
            }               
            b_code = "MC";

        }
        if(building_selection == "Natural Science Center"){
            BuildingName.setText((String) building_selection);
            FloorSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Level 1", "Level 2", "Level 3"}));
            if(Legend.isSelected()){
            img = new javax.swing.ImageIcon(getClass().getResource("Natural Science Center/Level 1 A.jpg"));    
                
            }
            else{
            img = new javax.swing.ImageIcon(getClass().getResource("Natural Science Center/Level 1.jpg"));  
            }
            b_code = "NSC";

        }
            picture.setIcon(img);
            Mapscrollpanel.repaint();
    
    //update room information when user click on building              
    String sql_building = "SELECT * from room WHERE bd_code ='"+b_code+"';";
    try{
        build = con.prepareStatement(sql_building);
        rsbuild = build.executeQuery();
        while(rsbuild.next()){
               listroom.add(rsbuild.getString("room_num"));
        }
        poi_build = listroom.toArray(poi_build);
        RoomSelector.setModel(new javax.swing.DefaultComboBoxModel<>(poi_build));  
        
        build.close();
        rsbuild.close();
        
        
    }catch(SQLException e){
        System.out.print("Building sql error"+e);
    
    }
    }//GEN-LAST:event_BuildingSelectorActionPerformed

    private void FloorSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FloorSelectorActionPerformed

    String FloorSelection = (String) FloorSelector.getSelectedItem();
    String BuildingSelection = (String) BuildingSelector.getSelectedItem();

    ArrayList<String> listroom = new ArrayList<String>();
    ArrayList<String> listpoi = new ArrayList<String>();

    String b_code =null;
    String floor =null;
    String Floorimg = "/map2/"+ BuildingSelection + "/"+FloorSelection+".jpg";

    picture.setIcon(new javax.swing.ImageIcon(this.getClass().getResource(Floorimg)));
    Mapscrollpanel.repaint();

    if(BuildingSelection == "Western Science Center"){
        b_code = "WSC";
    }
    if(BuildingSelection == "Middlesex College"){
        b_code = "MC";
    }
    if(BuildingSelection == "Natural Science Center"){
        b_code = "NSC";
    }
     
    if(FloorSelection == "Level 1"){
        floor = "1";
    }else if(FloorSelection == "Level 2"){
        floor = "2";
    }else if(FloorSelection == "Level 3"){
        floor = "3";
    }else if(FloorSelection == "Level 4"){
        floor = "4";
    }else if(FloorSelection == "Level 5"){
        floor = "5";
    }else if(FloorSelection == "Level 6"){
        floor = "6";
    }
         
     
    String sql_room = "SELECT * from room WHERE floor_level ='"+floor+"' AND bd_code ='"+b_code+"';";
    String sql_type = "SELECT DISTINCT room_type from room WHERE floor_level ='"+floor+"' AND bd_code ='"+b_code+"';";
    try{
          room = con.prepareStatement(sql_room);
          type = con.prepareStatement(sql_type);

          rsroom = room.executeQuery();
          rstype = type.executeQuery();

          while(rsroom.next()){
              listroom.add(rsroom.getString("room_num"));

          }
          while(rstype.next()){
              listpoi.add(rstype.getString("room_type"));
          }

           poi_room = listroom.toArray(poi_room);
           poi_type = listpoi.toArray(poi_type);

           RoomSelector.setModel(new javax.swing.DefaultComboBoxModel<>(poi_room));  
           POIselector.setModel(new javax.swing.DefaultComboBoxModel<>(poi_type)); 

           room.close();
           type.close();
           rsroom.close();
           rstype.close();
    }catch(SQLException e){
        System.out.println("Floor selection error:"+e);
    }                                             
   
    }//GEN-LAST:event_FloorSelectorActionPerformed

    
/*
    
    */
    private void POIselectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_POIselectorActionPerformed
        ArrayList<String> listroom = new ArrayList<String>();
        String POI = (String) POIselector.getSelectedItem();
        String sql_room = "SELECT * from room WHERE room_type LIKE ?;";
        try{
            poi = con.prepareStatement(sql_room);
            poi.setString(1,POI);
            rspoi = poi.executeQuery();
            while(rspoi.next()){
               listroom.add(rspoi.getString("room_num"));
           }
            poi_room = listroom.toArray(poi_room);
            RoomSelector.setModel(new javax.swing.DefaultComboBoxModel<>(poi_room));  
            
            poi.close();
            rspoi.close();
        }catch(Exception e){
            System.out.print("POI selection error:"+e);

     
    }//GEN-LAST:event_POIselectorActionPerformed
}
    private void SavedPOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavedPOIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SavedPOIActionPerformed

    private void NewPOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPOIActionPerformed
        POI obj = new POI();
        obj.setVisible(true);        
    }//GEN-LAST:event_NewPOIActionPerformed

    private void MapscrollpanelAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_MapscrollpanelAncestorResized
        // TODO add your handling code here:
    }//GEN-LAST:event_MapscrollpanelAncestorResized

    private void LegendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LegendActionPerformed
     String FloorSelection = (String) FloorSelector.getSelectedItem();
     String BuildingSelection = (String) BuildingSelector.getSelectedItem();
     if(Legend.isSelected()){
        FloorSelection = BuildingSelection + "/" + FloorSelection + " A.jpg";
     }
     else{
        FloorSelection = BuildingSelection + "/" + FloorSelection + ".jpg";         
     }
    img = new javax.swing.ImageIcon(getClass().getResource(FloorSelection));
    picture.setIcon(img);
    Mapscrollpanel.repaint();
    }//GEN-LAST:event_LegendActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        filter.setText(SearchBar.getText());      
        
        javax.swing.GroupLayout FilterPanelLayout = new javax.swing.GroupLayout(FilterPanel);
        FilterPanel.setLayout(FilterPanelLayout);
        FilterPanelLayout.setHorizontalGroup(
            FilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filter))
                    
        );
        FilterPanelLayout.setVerticalGroup(
            FilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filter))
        );                  
    }//GEN-LAST:event_SearchActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        filter.setText("");
    }//GEN-LAST:event_ClearActionPerformed

    private void ZoomInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoomInActionPerformed
        try{
            int w = picture.getWidth();
            int h = picture.getHeight();
            int wChange= (int) (w*0.10);
            int hChange= (int) (h*0.10);    
            ImageIcon icon = new ImageIcon(ZoomImage(w+wChange,h+hChange,img.getImage()));
            picture.setIcon(icon);
            
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_ZoomInActionPerformed

    private void ZoomOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoomOutActionPerformed
        try{
            int w = picture.getWidth();
            int h = picture.getHeight();
            int wChange= (int) (w*0.10);
            int hChange= (int) (h*0.10);
            System.out.println(w);
            System.out.println(h);
            ImageIcon icon = new ImageIcon(ZoomImage(w-wChange,h-hChange,img.getImage()));
            picture.setIcon(icon);           
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_ZoomOutActionPerformed

    private void RoomSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoomSelectorActionPerformed

        String BuildingSelection = (String) BuildingSelector.getSelectedItem();
        String RoomSelection = (String) RoomSelector.getSelectedItem();
        String level =null;
        ArrayList<String> listfloor = new ArrayList<String>();

        String b_code =null;
        String sql_level = "SELECT * from room WHERE room_num LIKE ?;";
    try{
            floor = con.prepareStatement(sql_level);
            floor.setString(1,RoomSelection);
            rsfloor = floor.executeQuery();
            if(rsfloor.next()){
               level = "Level " + rsfloor.getString("floor_level");
               listfloor.add(level);
           }else{
                System.out.print("no image for this room.");
            }
        if(BuildingSelection == "Western Science Center"){
            b_code = "WSC";
        }
        if(BuildingSelection == "Middlesex College"){
           b_code = "MC";
        }
        if(BuildingSelection == "Natural Science Center"){
           b_code = "NSC";
        }
            String Roomimg = "/map2/"+ BuildingSelection + "/"+b_code+"/"+level+"/"+RoomSelection+".jpg";
            System.out.print(Roomimg);
            picture.setIcon(new javax.swing.ImageIcon(this.getClass().getResource(Roomimg)));
        
            //poi_floor = listfloor.toArray(poi_floor);
            
            //FloorSelector.setModel(new javax.swing.DefaultComboBoxModel<>(poi_floor));  
        }catch(Exception e){
            System.out.print("Roomselector floor selection error:"+e);
        } 
    //String Floor = (String) FloorSelector.getSelectedItem();
//    try{
//        if(BuildingSelection == "Western Science Center"){
//         b_code = "WSC";
//        }
//        if(BuildingSelection == "Middlesex College"){
//            b_code = "MC";
//        }
//        if(BuildingSelection == "Natural Science Center"){
//            b_code = "NSC";
//        }
//        String Roomimg = "/map2/"+ BuildingSelection + "/"+b_code+"/"+Floor+"/"+RoomSelection+".jpg";
//        picture.setIcon(new javax.swing.ImageIcon(this.getClass().getResource(Roomimg)));
//
//        Mapscrollpanel.repaint();
//        
//        floor.close();
//        rsfloor.close();
//        
//    }catch(Exception e){
//            System.out.println("Roomselector image error: "+e);
        
//    }
            
        
      
    }//GEN-LAST:event_RoomSelectorActionPerformed
    private Image ZoomImage(int w, int h, Image img){
        BufferedImage buf = new BufferedImage(w,h,BufferedImage.TYPE_INT_RGB);
        Graphics2D grf = buf.createGraphics();
        grf.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        grf.drawImage(img,0,0,w,h,null);
        grf.dispose();
        return buf;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buildings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buildings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buildings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buildings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable(){
            public void run() {
                new Buildings("Natural Science Center").setVisible(true);
            }
           
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BuildingName;
    private javax.swing.JComboBox<String> BuildingSelector;
    private javax.swing.JButton Clear;
    private javax.swing.JPanel FilterPanel;
    private javax.swing.JComboBox<String> FloorSelector;
    private javax.swing.JToggleButton Legend;
    private javax.swing.JScrollPane Mapscrollpanel;
    private javax.swing.JButton NewPOI;
    private javax.swing.JComboBox<String> POIselector;
    private javax.swing.JComboBox<String> RoomSelector;
    private javax.swing.JButton SavedPOI;
    private javax.swing.JButton Search;
    private javax.swing.JTextField SearchBar;
    private javax.swing.JButton ZoomIn;
    private javax.swing.JButton ZoomOut;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel picture;
    // End of variables declaration//GEN-END:variables
}


